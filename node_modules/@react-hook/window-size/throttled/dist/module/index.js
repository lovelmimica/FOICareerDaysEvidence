import React from 'react'
const {useEffect} = React
import useThrottle from '@react-hook/throttle'
const emptyArr = []
const emptyObj = {}
export const useWindowSize = (options = emptyObj) => {
  const {fps, leading, initialWidth = 0, initialHeight = 0} = options
  const [size, setThrottledSize] = useThrottle(
    /* istanbul ignore next */
    typeof document === 'undefined'
      ? [initialWidth, initialHeight]
      : [
          document.documentElement.clientWidth,
          document.documentElement.clientHeight,
        ],
    fps,
    leading
  )

  function _ref() {
    return setThrottledSize([
      document.documentElement.clientWidth,
      document.documentElement.clientHeight,
    ])
  }

  useEffect(() => {
    const setSize = _ref
    window.addEventListener('resize', setSize)
    window.addEventListener('orientationchange', setSize)
    return () => {
      window.removeEventListener('resize', setSize)
      window.removeEventListener('orientationchange', setSize)
    }
  }, emptyArr)
  return size
}
export const useWindowHeight = (options) => useWindowSize(options)[1]
export const useWindowWidth = (options) => useWindowSize(options)[0]
export default useWindowSize
